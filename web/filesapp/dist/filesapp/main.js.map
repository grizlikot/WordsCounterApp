{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".inputFiles {\\r\\n    display: inline-block;\\r\\n}\\r\\n\\r\\nh2.statusOK {\\r\\n    color:green;\\r\\n}\\r\\n\\r\\nh2.statusNotOK {\\r\\n    color:red;\\r\\n}\\r\\n\\r\\n.file-title {\\r\\n    border-bottom:solid;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxzQkFBc0I7Q0FDekI7O0FBRUQ7SUFDSSxZQUFZO0NBQ2Y7O0FBRUQ7SUFDSSxVQUFVO0NBQ2I7O0FBRUQ7SUFDSSxvQkFBb0I7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pbnB1dEZpbGVzIHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuaDIuc3RhdHVzT0sge1xyXG4gICAgY29sb3I6Z3JlZW47XHJcbn1cclxuXHJcbmgyLnN0YXR1c05vdE9LIHtcclxuICAgIGNvbG9yOnJlZDtcclxufVxyXG5cclxuLmZpbGUtdGl0bGUge1xyXG4gICAgYm9yZGVyLWJvdHRvbTpzb2xpZDtcclxufSJdfQ== */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n   {{ title }}\\n  </h1>\\n  <h2>Here you can upload multiple txt files</h2>\\n  <ng-container>\\n    <input class=\\\"inputFiles\\\" type=\\\"file\\\" id=\\\"file\\\" multiple (change)=\\\"pushFilesContents($event)\\\">\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"uploadFiles()\\\">Count Words !</button>\\n  </ng-container>\\n  <div><button class=\\\"btn btn-primary\\\" (click)=\\\"clearValues()\\\">Refresh !</button></div>\\n  <h2 [ngStyle]=\\\"{'color': successful ? 'green' : 'red'}\\\">{{ message }}</h2>\\n  <div class=\\\"app flex-row align-items-center\\\">   \\n    <div class=\\\"container\\\"> \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3\\\" *ngFor=\\\"let words of wordsMap | keyvalue\\\">\\n          <h4 class=\\\"file-title\\\">File {{words.key}} </h4>\\n          <div *ngFor=\\\"let word of words.value | keyvalue\\\">\\n            <p> {{word.key}} - {{word.value}} </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpErrorResponse } from '@angular/common/http/src/response';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Welcome to Word Counter App!';\n\n  private files:string [] = [];\n  successful:boolean = false;\n  message:string = '';\n  wordsMap:Map<number, Map<string, number>> = new Map<number, Map<string, number>>();\n\n  constructor (private httpService: HttpClient) {  }\n\n  pushFilesContents (e) {\n    for (var i = 0; i < e.target.files.length; i++) { \n      this.files.push(e.target.files[i]);\n    }\n  }\n\n  uploadFiles () {\n    const formData = new FormData();\n    \n    for (var i = 0; i < this.files.length; i++) { \n      formData.append(\"files\", this.files[i]);\n    }\n    \n    this.httpService.post('/files/count', formData).subscribe(\n      data => {\n        debugger;\n        this.message = 'Words counted successfully!'\n        this.wordsMap = data as Map<number, Map<string, number>>;\n        this.successful = true;\n      },\n      (error: HttpErrorResponse) => {\n        console.log (error.message);\n        this.message = 'There are some errors!'\n        this.successful = false;\n      }\n    );\n  }\n\n  clearValues() {\n    this.files = [];\n    this.successful = false;\n    this.message = ''\n    this.wordsMap = new Map<number, Map<string, number>>();\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}